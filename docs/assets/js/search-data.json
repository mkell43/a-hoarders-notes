[{"doc":"This page has not yet sprouted","title":"This page has not yet sprouted","hpath":"403","content":"[Dendron](https://dendron.so/) (the tool used to generate this site) lets authors selective publish content. You will see this page whenever you click on a link to an unpublished page\n\n![](https://foundation-prod-assetspublic53c57cce-8cpvgjldwysl.s3-us-west-2.amazonaws.com/assets/images/not-sprouted.png)","url":"https://mkell43.github.io/a-hoarders-notes/notes/403.html","relUrl":"notes/403.html"},{"doc":"Introduction","title":"Introduction","hpath":"root","content":"## Welcome to A Hoarder's Notes\n\nThis is my digital garden where I hoard all the interesting things I learn about. Much like my actual garden, there's probably too much stuffed into it. It mostly contains links and information about tools that I find interesting or cool. Though there are some sections about gardening, project ideas, projects that I've worked on (and probably abandoned before completing), crypto, and mental health. It's quite a lot and might be overwhelming to sift through. Please take advantage of the search bar at the top of the site and -- if you're curious about the same sort of things -- slowly explore through the contents at your leisure.\n\n**Note**: I'm in the process of migrating most of this out of [Joplin](https://joplinapp.org/) which has served me well for years. There are some limitations with it that have made it difficult to keep it integrated with my processes for note keeping and managing my days as they evolve.\n","url":"https://mkell43.github.io/a-hoarders-notes","relUrl":"/"},{"doc":"Toolbox","title":"Toolbox","hpath":"tools","content":"\nI can't help myself. Anytime I see a tool mentioned or linked to I have to check it out. There aren't enough hours in the day to explore all of them and determine exactly what they do. Instead, I write them down in my notes for future reference in case I have need of them later.\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/CL2079hANe3oCLOvnoK7P.html","relUrl":"notes/CL2079hANe3oCLOvnoK7P.html"},{"doc":"Terraform Tools","title":"Terraform Tools","hpath":"tools.terraform","content":"\nSnippets, docs, guides, and other miscellaneous Terraform information please\nsee the [[iac.terraform]] page in [[iac]].\n\n## Links & Awesome Lists\n\n- [Everything I Know | devops/terraform](https://wiki.nikitavoloboev.xyz/devops/terraform#links)\n\n## Cost Management\n\n### Infracost\n\n<https://www.infracost.io/> | <https://www.infracost.io/docs/>\n\nEstimates costs based off of `terraform plan` output (as far as I can tell).\nLooking at their\n[supported resources page](https://www.infracost.io/docs/supported_resources)\nit doesn't seem that they support every GCP resource type or things like\nsustained use and commitment discounts. That doesn't mean there wouldn't be\nvalue in integrating it into CI.\n\n## Documentation\n\n### Terraform Docs\n\n<https://terraform-docs.io/>\n\nAutomatically builds documentation for you Terraform modules. Works best when\nused with a git hook or as a part of a CI pipeline.\n\n## Providers\n\n### terraform-provider-confluence\n\n[chesshacker/terraform-provider-confluence](https://github.com/chesshacker/terraform-provider-confluence) | [Docs](https://chesshacker.github.io/terraform-provider-confluence/)\n\nProvides resources to create Confluence pages and attachments.\n\n----\n\n## Collections\n\n[[#terraform|collections.terraform]]\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/GlccMfkU4xwQl5I8vPZxK.html","relUrl":"notes/GlccMfkU4xwQl5I8vPZxK.html"},{"doc":"Security Tools","title":"Security Tools","hpath":"tools.security","content":"\n## Suites\n\n### GrapheneX\n\n<https://github.com/grapheneX/grapheneX>\n\nWritten in Python, the goal of GrapheneX is to automatically harden systems. It comes with a CLI, interactive shell, and a web interface.\n\n### lynis\n\n<https://github.com/CISOfy/Lynis>\n\nLynis is a cross platform security auditing platform for UNIX based systems. It scans, tests, and provides information on hardening a system. [Cisofy](https://cisofy.com/lynis/) offers an enterprise version that that targets areas of compliance (PCI, HIPAA, ISO) and comes with a web interface along with some additional features.\n\n### Sn1per\n\n<https://github.com/1N3/Sn1per>\n\nA suite of tools bundled together to do things like pen testing, vulnerability management, application scans, attack surface discovery, and more. From [Xero Security](https://xerosecurity.com/) who appear to have a paid hosted version of this tool.\n\n----\n\n## Collections\n\n[[#security|collections.security]]\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/KMXmU91BluKYXVRoCSOq6.html","relUrl":"notes/KMXmU91BluKYXVRoCSOq6.html"},{"doc":"Organization","title":"Organization","hpath":"tools.organization","content":"\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/gVeeMxGp3qbIq7B42Eru5.html","relUrl":"notes/gVeeMxGp3qbIq7B42Eru5.html"},{"doc":"Personal Knowledge Base Tools","title":"Personal Knowledge Base Tools","hpath":"tools.organization.pkb","content":"\n## Awesome Lists\n\n### brettkromkamp/awesome-knowledge-management\n\n<https://github.com/brettkromkamp/awesome-knowledge-management>\n\n> A curated list of amazingly awesome articles, people, applications, software\n> libraries and projects related to the knowledge management space.\n\n## Collections\n\n- [[#personal-knowledgebase|collections.pkb]]\n- [[#awesome-lists|collections.awesome-lists]]\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/ar_2CboeSKo7K9GwbWofL.html","relUrl":"notes/ar_2CboeSKo7K9GwbWofL.html"},{"doc":"Joplin","title":"Joplin","hpath":"tools.organization.pkb.joplin","content":"\n## Plugins\n\n- \"Official\" List: [Joplin Plugins](https://joplinapp.org/plugins/) | [Github](https://github.com/joplin/plugins)\n\n## API\n\n### Python Modules\n\n- [joplin-api](https://gitlab.com/annyong/joplin-api)\n\n----\n\n## Collections\n\n- [[#personal-knowledgebase|collections.pkb]]\n- [[#joplin|collections.joplin]]\n- [[#python|collections.python]]\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/2A4IfN9IMIYJTScN.html","relUrl":"notes/2A4IfN9IMIYJTScN.html"},{"doc":"Dendron","title":"Dendron","hpath":"tools.organization.pkb.dendron","content":"\n## Gotchas\n\n### Site Build Command\n\n- I have noticed that re-building after editing the `dendron.yml` file doesn't always cause the changes to be picked up. For example: Changing the value of the `site.assetsPrefix` key didn't get picked up and I had to delete the `docs` directory and re-run the `Dendron: Site Build` command. Might be best to have the directory destroyed before building each time.\n\n## Publishing\n\n### Github\n\nEssentially the same as the notes in the [Dendron wiki](https://wiki.dendron.so/notes/230d0ccf-5758-4a8f-b39b-3b68e1482e2b.html).\n\n1. Create a user site following the guide on [Github](https://pages.github.com/).\n2. If one doesn't already exist, create a new repository on Github for your Dendron notes.\n3. Push your files up to the repository.\n4. Enable Github Pages for the repository using the `main` branch and the `docs` directory.\n5. Copy the site URL that it shows after you save. It should look something like: `https://mkell43.github.io/a-hoarders-notes/`.\n6. Edit the `dendron.yml` file adding the key `site.siteUrl` with the hostname of your site. For example, if the site URL that Github showed you when enabling Github Pages is `https://mkell43.github.io/a-hoarders-notes/` then the value for `site.siteUrl` would be: `https://mkell43.github.io`. See the example `dendron.yml` below.\n7. Add the path in the site URL that Github provided when enabling Github Pages to the `site.assetsPrefix` key in your `dendron.yml` file. For example, if the site URL they provided was `https://mkell43.github.io/a-hoarders-notes/` then the value for `site.assetsPrefix` would be: `a-hoarders-notes`. See the example `dendron.yml` below.\n8. Using the VSCode Command Pallette (`cmd/ctrl + shift + p`) run the `Dendron: Site Build` command.\n9. Git add, commit, and push your repository up to Github.\n\n#### Example dendron.yml\n\n```yaml\nversion: 1\nvaults:\n    -\n        fsPath: vault\nuseFMTitle: true\nuseNoteTitleForLink: true\nnoAutoCreateOnDefinition: true\nnoLegacyNoteRef: true\nnoXVaultWikiLink: true\nlookupConfirmVaultOnCreate: false\nautoFoldFrontmatter: true\njournal:\n    dailyDomain: daily\n    name: journal\n    dateFormat: y.MM.dd\n    addBehavior: childOfDomain\n    firstDayOfWeek: 1\nsite:\n    copyAssets: true\n    siteHierarchies:\n        - root\n    siteRootDir: docs\n    usePrettyRefs: true\n    title: A Hoarders Notes\n    description: Personal knowledge space\n    siteUrl: https://mkell43.github.io\n    assetsPrefix:  a-hoarders-notes\ninitializeRemoteVaults: true\n```\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/nQeZ9Z8qdrslc_a_eBFHg.html","relUrl":"notes/nQeZ9Z8qdrslc_a_eBFHg.html"},{"doc":"Kubernetes Tools","title":"Kubernetes Tools","hpath":"tools.k8s","content":"\n## Kubernetes External Secrets\n\n<https://github.com/external-secrets/kubernetes-external-secrets>\n\n> Integrate external secret management systems with Kubernetes\n\n----\n\n## Collections\n\n[[#kubernetes|collections.k8s]]\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/kn_KLbe7ISdtqATbQ_1L7.html","relUrl":"notes/kn_KLbe7ISdtqATbQ_1L7.html"},{"doc":"Git Tools","title":"Git Tools","hpath":"tools.git","content":"\n## Extensions\n\n### Commitzen\n\n<https://github.com/commitizen/cz-cli>\n\nEnforce commit conventions.\n\n**GitHub Topic**: <https://github.com/topics/commitizen>\n\n#### Adapters\n\n**GitHub Topic**: <https://github.com/topics/commitizen-adapter>\n\n### Gitflow AVH\n\n<https://github.com/petervanderdoes/gitflow-avh>\n\n> AVH Edition of the git extensions to provide high-level repository operations for Vincent Driessen's branching model\n\n<http://nvie.com/posts/a-successful-git-branching-model/>\n\n### Awesome Lists\n\n- [aitemr/awesome-git-hooks](https://github.com/aitemr/awesome-git-hooks)\n\n### Talisman\n\n<https://github.com/thoughtworks/talisman>\n\n> A tool to detect and prevent secrets from getting checked in.\n\n## Hook Frameworks\n\n### Pre-commit\n\n<https://pre-commit.com/>\n\n**GitHub Topic**: <https://github.com/topics/pre-commit>\n\n#### Hooks\n\n- <https://pre-commit.com/hooks.html>\n\n### Husky\n\n<https://typicode.github.io/husky/#/>\n\n**GitHub Topic**: <https://github.com/topics/husky>\n\n#### Hooks\n\n- Jira Prepare Commit Msg: <https://github.com/bk201-/jira-prepare-commit-msg>\n\n## Overcommit\n\n<https://github.com/sds/overcommit>\n\n> A fully configurable and extendable Git hook manager.\n\n## GitHub Topics\n\n- [git-hooks](https://github.com/topics/git-hooks)\n\n----\n\n## Collections\n\n[[#git|collections.git]]\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/g-y817itcrGBAQB0nbxcK.html","relUrl":"notes/g-y817itcrGBAQB0nbxcK.html"},{"doc":"GitHub Actions Tools","title":"GitHub Actions Tools","hpath":"tools.gha","content":"\n## Actions\n\n### peaceiris/actions-gh-pages\n\n[peaceiris/actions-gh-pages](https://github.com/peaceiris/actions-gh-pages)\n\n> GitHub Actions for GitHub Pages rocket Deploy static files and publish your\n> site easily. Static-Site-Generators-friendly.\n\n#### Example Use\n\nLikely out of date: <https://github.com/mkell43/a-hoarders-notes/blob/main/.github/workflows/gh-pages.yml>\n\n```yaml\n---\nname: Github Pages\n\non:\n  workflow_dispatch:\n  push:\n    branches:\n      - main\n\njobs:\n  build-deploy:\n    runs-on: ubuntu-latest\n    steps:\n\n      # For explanation as to why we use `persist-credentials` & `fetch-depth` see:\n      #   https://github.com/ad-m/github-push-action#example-workflow-file\n      - uses: actions/checkout@v2\n        with:\n          persist-credentials: false\n          fetch-depth: 0\n\n      - name: Setup node\n        uses: actions/setup-node@v2\n        with:\n          node-version: 14\n          cache: npm\n\n      - name: Install packages\n        run: npm install\n\n      - name: Build site w/ dendron\n        run: npx dendron buildSiteV2 --stage prod\n\n      # `git diff-index --quiet HEAD` will return an exit code of 1 if there are\n      #   changes staged. If there are changes, it commits them back to the repo.\n      - name: Commit files\n        run: |\n          git config --local user.email \"action@github.com\"\n          git config --local user.name \"GitHub Action\"\n          git add docs/\n          git diff-index --quiet HEAD \\\n            || git commit -m \"Build site.\"\n\n      - name: Push changes\n        uses: ad-m/github-push-action@master\n        with:\n          github_token: ${{ secrets.GITHUB_TOKEN }}\n          branch: ${{ github.ref }}\n```\n\n## Snippets\n\n### Make a Commit if Changes Are Staged\n\nDuring CI if changes are made during the process -- such as when building a\nstatic site -- the step below will commit them. They can then be pushed back to\nthe repo as your own user, but it's easier to use another action like:\n[Github Push Action](https://github.com/ad-m/github-push-action).\n\n`git diff-index --quiet HEAD` will return `0` if there aren't any changes\nstaged and a `1` if there are. The `||` will then trigger the `git commit`.\n\n```yaml\n\n- name: Commit files\n  run: |\n    git config --local user.email \"action@github.com\"\n    git config --local user.name \"GitHub Action\"\n    git add docs/\n    git diff-index --quiet HEAD \\\n      || git commit -m \"Build site.\"\n```\n\n----\n\n## Collections\n\n[[#github-actions|collections.gha]]\n[[#github-pages|collections.github-pages]]\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/rYXJnz807MckQc40Daiiu.html","relUrl":"notes/rYXJnz807MckQc40Daiiu.html"},{"doc":"Editors","title":"Editors","hpath":"tools.editors","content":"\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/zoQdZDEL61ffGZtO.html","relUrl":"notes/zoQdZDEL61ffGZtO.html"},{"doc":"VSCode","title":"VSCode","hpath":"tools.editors.vscode","content":"\n## Extensions\n\n- [Codalyze - Code Complexity Report Generator](https://marketplace.visualstudio.com/items?itemName=selcuk-usta.code-complexity-report-generator)\n- [Code Inspector](https://marketplace.visualstudio.com/items?itemName=code-inspector.code-inspector-vscode-plugin) (VSCode Extension)\n\n---\n\n## Collections\n\n- [[#editors|collections.editors]]\n- [[#vscode|collections.vscode]]\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/iXJ4aAQZjymzUiN0.html","relUrl":"notes/iXJ4aAQZjymzUiN0.html"},{"doc":"Markdown","title":"Markdown","hpath":"tools.editors.markdown","content":"\n## Typora\n\n<https://typora.io/>\n\n### Themes\n\n- [Official Themes](https://theme.typora.io/)\n\n### Thoughts\n\nProbably the closest to my ideal Markdown editor due to how it renders the document in place instead of in a preview window off to the side.\n\n## ByteMD\n\n<https://github.com/bytedance/bytemd>\n\n## Marktext\n\n<https://marktext.app/>\n\n## Octo\n\n<https://github.com/writewithocto/octo>\n\n## Awesome Lists\n\n- [Awesome Open Source / Markdown Editor](https://awesomeopensource.com/projects/markdown-editor)\n\n----\n\n## Collections\n\n[[#editors|collections.editors]]\n[[#awesome-lists|collections.awesome-lists]]\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/6rlG8PRhhxwHkHgn.html","relUrl":"notes/6rlG8PRhhxwHkHgn.html"},{"doc":"Application Managment Tools","title":"Application Managment Tools","hpath":"tools.application-management","content":"\n## ASDF\n\n[asdv-vm/asdv](https://github.com/asdf-vm/asdf) | [Documentation](https://asdf-vm.com/#/core-manage-asdf)\n\n> Extendable version manager with support for Ruby, Node.js, Elixir, Erlang &\n> more\n\nI really like the idea of having a tool that centrally manages versions of\ndifferent applications. However, the number of available utilities is too small\nto actually replace things like `brew`, `apt`, or even tools that are specific\nto a particular utility such as `tfswitch` or `pyenv`.\n\nWhile I could go through and create plugins to support more of what I need, the\ntime tha I have is precious and I'm already familiar with other package\nmanagement tools.\n\nThe page listing\n[asdf plugins](https://asdf-vm.com/#/plugins-all?id=plugin-list) has been a\ngood resource for finding new tools to hoard.\n\n----\n\n## Collections\n\n[[#application-management|collections.application-management]]\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/d6zNvsbk7odfqurS-CCoo.html","relUrl":"notes/d6zNvsbk7odfqurS-CCoo.html"},{"doc":"Infrastructure as Code","title":"Infrastructure as Code","hpath":"iac","content":"\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/OVldOHYcqcH5CK7z9Wtls.html","relUrl":"notes/OVldOHYcqcH5CK7z9Wtls.html"},{"doc":"Terraform","title":"Terraform","hpath":"iac.terraform","content":"## About\n\nTerraform is a tool for defining your infrastructure declaratively (though, I would argue they're slowly changing that) using HCL2. Be sure to checkout the [[Terraform Toolbox|tools.terraform]] as well.\n\n## Guides / Tutorials\n\n### Terraform tips & tricks: loops, if-statements, and gotchas\n\n<https://blog.gruntwork.io/terraform-tips-tricks-loops-if-statements-and-gotchas-f739bbae55f9>\n\n----\n\n## Collections\n\n[[#terraform|collections.terraform]]\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/YXA2VLGGYjDvovzSnJzRL.html","relUrl":"notes/YXA2VLGGYjDvovzSnJzRL.html"},{"doc":"Collections","title":"Collections","hpath":"collections","content":"\nBecause a number of notes will likely be logically separated form each other in the navigation on this site despite being a part of the same topic, the [[collections]] page offers a way of finding the notes a little more simply.\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/0_SHh7L-672njVmezF8od.html","relUrl":"notes/0_SHh7L-672njVmezF8od.html"},{"doc":"VSCode","title":"VSCode","hpath":"collections.vscode","content":"\nNotes about or relating to [[tools.editors.vscode]].\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/YHKHiB0rQIZdoggq.html","relUrl":"notes/YHKHiB0rQIZdoggq.html"},{"doc":"Terraform","title":"Terraform","hpath":"collections.terraform","content":"\nNotes about or relating to [[iac.terraform]].\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/CRRxgFsFDQe-SEgKtOjeM.html","relUrl":"notes/CRRxgFsFDQe-SEgKtOjeM.html"},{"doc":"Security","title":"Security","hpath":"collections.security","content":"\nNotes about or relating to security.\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/tsvPE2YVRr2_xSFaljyVq.html","relUrl":"notes/tsvPE2YVRr2_xSFaljyVq.html"},{"doc":"Python","title":"Python","hpath":"collections.python","content":"\nNotes about or relating to Python.\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/DsNs0dSVki3PBTjN.html","relUrl":"notes/DsNs0dSVki3PBTjN.html"},{"doc":"Personal Knowledge Base","title":"Personal Knowledge Base","hpath":"collections.pkb","content":"\nNotes about or relating to personal knowledge bases / personal knowledge management.\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/Vf2EDlpDOg9ox8fKc3gr2.html","relUrl":"notes/Vf2EDlpDOg9ox8fKc3gr2.html"},{"doc":"Markdown","title":"Markdown","hpath":"collections.markdown","content":"\nNotes about or relating to Markdown.\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/9fk5qzrVP79skxCG.html","relUrl":"notes/9fk5qzrVP79skxCG.html"},{"doc":"Kubernetes","title":"Kubernetes","hpath":"collections.k8s","content":"\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/CGfQmCQknGc60LXp.html","relUrl":"notes/CGfQmCQknGc60LXp.html"},{"doc":"Joplin","title":"Joplin","hpath":"collections.joplin","content":"\nNotes about or relating to [[tools.organization.pkb.joplin]].","url":"https://mkell43.github.io/a-hoarders-notes/notes/YTw6zX8wsAgrAQsP.html","relUrl":"notes/YTw6zX8wsAgrAQsP.html"},{"doc":"GitHub Pages","title":"GitHub Pages","hpath":"collections.github-pages","content":"\nNotes about or relating to GitHub Pages.\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/DCW_UrrJc-Zs2geUeXTLz.html","relUrl":"notes/DCW_UrrJc-Zs2geUeXTLz.html"},{"doc":"Git","title":"Git","hpath":"collections.git","content":"\nNotes about or relating to git.\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/XGioDsVTEN3rXIpM3q1Pm.html","relUrl":"notes/XGioDsVTEN3rXIpM3q1Pm.html"},{"doc":"GitHub Actions","title":"GitHub Actions","hpath":"collections.gha","content":"\nNotes about or relating to [[ci.gha]].\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/Y6fg-l4Br11QphPsdWr1X.html","relUrl":"notes/Y6fg-l4Br11QphPsdWr1X.html"},{"doc":"Editors","title":"Editors","hpath":"collections.editors","content":"\nNotes about or relating to [[tools.editors]].\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/qbQ6pqqTs3BHZuti.html","relUrl":"notes/qbQ6pqqTs3BHZuti.html"},{"doc":"Awesome Lists","title":"Awesome Lists","hpath":"collections.awesome-lists","content":"\nNotes about or relating to awesome lists.\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/XEPK6P1Xj_Ym6Z9lnS_W2.html","relUrl":"notes/XEPK6P1Xj_Ym6Z9lnS_W2.html"},{"doc":"Application Management","title":"Application Management","hpath":"collections.application-management","content":"\nNotes about or relating to application management.\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/EltQsn3Gjsz57jmG8WBHN.html","relUrl":"notes/EltQsn3Gjsz57jmG8WBHN.html"},{"doc":"Cloud Providers","title":"Cloud Providers","hpath":"cloud-providers","content":"\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/Gj2JPqWkOZFix3gD.html","relUrl":"notes/Gj2JPqWkOZFix3gD.html"},{"doc":"GCP","title":"GCP","hpath":"cloud-providers.gcp","content":"\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/u6IlPndUcSjYi9Wo.html","relUrl":"notes/u6IlPndUcSjYi9Wo.html"},{"doc":"Artifact Registry","title":"Artifact Registry","hpath":"cloud-providers.gcp.artifact-registry","content":"\n## Usage\n\n### General\n\n1. Enable Artifact Registry.\n   - [GCP Artifiact Registry Docs - Enable Artifact Registry](https://cloud.google.com/artifact-registry/docs/enable-service)\n2. Create the repository.\n   - [GCP Artifiact Registry Docs - Manage Repositories](https://cloud.google.com/artifact-registry/docs/manage-repos)\n   - [GCP Terraform Provider Docs - Resource: Artifact Registry Repository](https://registry.terraform.io/providers/hashicorp/google/latest/docs/resources/artifact_registry_repository)\n\n### Containers\n\n1. Configure Docker authentication to the registry.\n   - Use `gcloud` helper when possible.\n     - Example: `gcloud auth configure-docker us-west2-docker.pkg.dev`\n     - [GCP Artifact Registry Docs - gcloud helper](https://cloud.google.com/artifact-registry/docs/docker/authentication#gcloud-helper)\n   - [GCP Artifact Registry Docs - Docker Authentication](https://cloud.google.com/artifact-registry/docs/docker/authentication)\n\n## Permissions\n\n[GCP Artifact Registry Docs - Access Control](https://cloud.google.com/artifact-registry/docs/access-control)","url":"https://mkell43.github.io/a-hoarders-notes/notes/oiaFYWGLqDiyb3Cx.html","relUrl":"notes/oiaFYWGLqDiyb3Cx.html"},{"doc":"CI","title":"CI","hpath":"ci","content":"\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/iuLTHdscZOrYYVfRIxx0P.html","relUrl":"notes/iuLTHdscZOrYYVfRIxx0P.html"},{"doc":"GitHub Actions","title":"GitHub Actions","hpath":"ci.gha","content":"\n----\n\n## Collections\n\n[[#github-actions|collections.gha]]\n","url":"https://mkell43.github.io/a-hoarders-notes/notes/MEuwFoXEjOcuwvdIxoisd.html","relUrl":"notes/MEuwFoXEjOcuwvdIxoisd.html"},{"doc":"Changelog","title":"Changelog","hpath":"root.changelog","content":"","url":"https://mkell43.github.io/a-hoarders-notes/notes/changelog.html","relUrl":"notes/changelog.html"}]
